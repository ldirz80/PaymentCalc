buildscript {
    repositories {
        mavenCentral()
        mavenLocal()
        jcenter()
    }
}

apply plugin: 'java'
apply plugin: 'jacoco'
apply plugin: 'findbugs'

sourceCompatibility = javaVersion
targetCompatibility = javaVersion
archivesBaseName = projectName
version =  projectVersionMajor+'.'+projectVersionMinor+'.'+projectVersionBuild
compileJava.options.encoding = 'UTF-8'

jar {
		println 'Packaging version: '+version
        manifest
        {
        attributes 'Implementation-Title': projectName,
                   'Implementation-Version': version,
                   'Main-Class': 'net.sleepymouse.paymentcalc.PaymentCalc'
   	 }
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

repositories {
    mavenCentral()
}

jacoco {
    toolVersion = "0.7+"
    reportsDir = file("$buildDir/customJacocoReportDir")
}

test
{
 	maxParallelForks = 1
	filter
	{
	     includeTestsMatching "net.sleepymouse.paymentcalc.*"
	}
    jacoco {
        append = false
        destinationFile = file("$buildDir/jacoco/jacocoTest.exec")
        classDumpFile = file("$buildDir/jacoco/classpathdumps")
    }
}

jacocoTestReport {
    reports {
        xml.enabled false
        csv.enabled false
        html.destination "${buildDir}/jacocoHtml"
    }
}
    
findbugs {
    toolVersion = "3.+"
    sourceSets = [sourceSets.main]
    effort = "max"
    reportLevel = "medium"
}

check.dependsOn jacocoTestReport
test.dependsOn javadoc


dependencies {
    testCompile("junit:junit:4.+")
    testCompile("org.mockito:mockito-all:2.+")
    testCompile("com.jayway.jsonpath:json-path-parent:1.+")
    testCompile("org.hamcrest:hamcrest-all:1.+")
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.12'
}

task listJars << {
    configurations.compile.each { File file -> println file.name }
}
